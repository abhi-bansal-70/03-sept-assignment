Q1:- Build a simple webpage that displays text as shown in the below image.

sol:-
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
<p>
<b> This text will be bolded. </b>
</p>
<p>
<i> This text will be italic. </i>
</p>
<p>
<ins> This text will be underlined</ins>
</p>
<mark> This text will be highlighted </mark>
<p>
This is normal text<sup> This will be super scripted </sup> This is normal
again
</p>
<p>This is normal text <sub> This text will be subscripted </sub></p>
<p>Normal Text <small> Smal Text </small></p>
<p><del> This text will be deleted</del></p>
    
</body>
</html>

Q2:- Build a simple webpage that helps users navigate different web developments-related websites.
Note: On clicking the hyperlink the web pages should open in a new tab. Below in a refrence image.

sol:- 
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <body>
        <h1>Navigate Me:</h1>
        <p>
        Take me to
        <a href="https://pwskills.com/" target="_blank">PW Skills</a> to buy a
        course.
        </p>
        <p>
        Take me to
        <a href="https://developer.mozilla.org/en-US/" target="_blank"
        >MDN docs</a
        >
        to know more about Web Development.
        </p>
        <p>
        Take me to
        <a href="https://lab.pwskills.com/" target="_blank">PW Skills Lab</a> to
        practice live coding.
        </p>
        </body>
</body>
</html>

Q3:- Build a simple blog web page with 3 pages home, web Development, and web design. Each
page must contain hyperlinks to other pages in the top, a heading of the page topic and a 
paragraph of information.For the home page you can add some information about yourself.

sol:-
To create a simple blog web page with three pages (home, web development, and web design), you can use HTML and CSS. Here's a basic example:

HTML (index.html):
```html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Simple Blog</title>
</head>
<body>
  <header>
    <nav>
      <ul>
        <li><a href="index.html">Home</a></li>
        <li><a href="web-development.html">Web Development</a></li>
        <li><a href="web-design.html">Web Design</a></li>
      </ul>
    </nav>
  </header>
  
  <main>
    <section id="home">
      <h1>Home</h1>
      <p>Welcome to my blog! I'm Abhishek Bansal, a passionate web developer and designer.</p>
    </section>
  </main>
</body>
</html>
```

HTML (web-development.html):
```html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Web Development</title>
</head>
<body>
  <header>
    <nav>
      <ul>
        <li><a href="index.html">Home</a></li>
        <li><a href="web-development.html">Web Development</a></li>
        <li><a href="web-design.html">Web Design</a></li>
      </ul>
    </nav>
  </header>
  
  <main>
    <section id="web-development">
      <h1>Web Development</h1>
      <p>This page contains information about web development.
      Web development can be divided into two main categories: front-end development and
back-end development. Front-end development deals with the visual aspects of a website or
application, including the design, layout, and user interface. This involves working with
HTML, CSS, and JavaScript to create web pages that can be viewed in a browser.</p>
    </section>
  </main>
</body>
</html>
```

HTML (web-design.html):
```html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Web Design</title>
</head>
<body>
  <header>
    <nav>
      <ul>
        <li><a href="index.html">Home</a></li>
        <li><a href="web-development.html">Web Development</a></li>
        <li><a href="web-design.html">Web Design</a></li>
      </ul>
    </nav>
  </header>
  
  <main>
    <section id="web-design">
      <h1>Web Design</h1>
      <p>This page contains information about web design.
      Web design refers to the process of designing the visual appearance and
layout of websites. It involves creating a visual concept, planning the
layout of web pages, selecting color schemes, and choosing typography
and images.
<br />
Web designers use various tools and technologies to create visually
appealing and user-friendly websites. These tools include graphic design
software such as Adobe Photoshop, Adobe Illustrator, Sketch, and Figma.
They also use programming languages like HTML, CSS, and JavaScript to
bring their designs to life on the web.</p>
    </section>
  </main>
</body>
</html>

Q4:- create an ordered list of html tags.Each list items must include the tag name
and some information about the tag.

sol:-
<body>
  <h1>List of Tags.</h1>
  <ol>
    <li>h1: Defines a heading level 1, typically used for main headings.</li>
    <li>p: Defines a paragraph of text, often used for normal content.</li>
    <li>div: Defines a container for HTML elements, commonly used for layout purposes.</li>
    <li>table: Defines a table with rows and columns, used for displaying data in tabular format.</li>
    <li>ul: Defines an unordered list, which represents a list of items without any particular order.</li>
  </ol>
</body>

Q5:- Create a description list of full stack web development tech stack,using the <dl> tag.
Each term should be a tech stack name and each description should be a brief explanation
of what the tech stack is used for.

sol:-
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Full Stack Web Development Tech Stack</title>
</head>
<body>
  <h1>Full Stack Web Development Tech Stack</h1>
  
  <dl>
    <dt>HTML, CSS, JavaScript</dt>
    <dd>
      The fundamental building blocks of web development.
      <ul>
        <li><strong>HTML</strong>: Defines the structure of web pages.</li>
        <li><strong>CSS</strong>: Styles the appearance of web pages.</li>
        <li><strong>JavaScript</strong>: Adds interactivity and dynamic behavior to web pages.</li>
      </ul>
    </dd>
    
    <dt>Node.js</dt>
    <dd>
      A JavaScript runtime environment used for server-side development.
      <p>It allows developers to build scalable and efficient web applications using JavaScript on the server side.</p>
    </dd>
    
    <dt>Express.js</dt>
    <dd>
      A web application framework for Node.js.
      <p>It simplifies the process of building server-side applications and APIs by providing a robust set of features and utilities.</p>
    </dd>
    
    <dt>React</dt>
    <dd>
      A JavaScript library for building user interfaces.
      <p>It allows developers to create reusable UI components and build single-page applications with ease.</p>
    </dd>
    
    <dt>MongoDB</dt>
    <dd>
      A NoSQL database used for storing and managing data.
      <p>It offers flexibility, scalability, and high performance for handling large volumes of unstructured data.</p>
    </dd>
  </dl>
</body>
</html>


Q6:- create an order list of the full stack web-development tech stack HTML,CSS,and JS.For each
tech stack,create a table that lists the tech stack name, its primary use cases, and some
key features or benefits. below is a refrence image.

sol:-
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <ol>
<li>
<h2>HTML</h2>
<table border="1">
<tr>
<th>Primary Use Cases</th>
<th>Key Features/Benefits</th>
</tr>
<tr>
<td>Building the structure of web pages</td>
<td>
<ul>
<li>Simple and easy to learn</li>
<li>Compatible with all web browsers</li>
<li>Allows for semantic markup</li>
</ul>
</td>
</tr>
</table>
</li>
<li>
<h2>CSS</h2>
<table border="1">
<tr>
<th>Primary Use Cases</th>
<th>Key Features/Benefits</th>
</tr>
<tr>
<td>Styling and layout of web pages</td>
<td>
<ul>
<li>Allows for separation of content and presentation</li>
<li>Enables responsive design</li>
<li>Offers a wide range of styling options</li>
</ul>
</td>
</tr>
</table>
</li>
<li>
<h2>JavaScript</h2>
<table border="1">
<tr>
<th>Primary Use Cases</th>
<th>Key Features/Benefits</th>
</tr>
<tr>
<td>Adding interactivity and functionality to web pages</td>
<td>
<ul>
<li>Can manipulate and modify web page content in real-time</li>
<li>
Offers a wide range of functionality through libraries and
frameworks
</li>
<li>Allows for server-side scripting with Node.js</li>
</ul>
</td>
</tr>
</table>
</li>
</ol>
</body>
</html>

Q7:- Build a complex nested list structure representing a multi-level table of content.Use ordered lists
(<ul>) and list items (<li>) with inline-block styling to create a structured layout.Apply formatting
tags to enhance the presentation of list items.

sol:-
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <h1>Table of Contents</h1>
<ul>
<li><a href="#">Part 1: Introduction</a></li>
<li><a href="#">Part 2: Getting Started</a>
<ul>
<li><a href="#">2.1 Installing the Software</a></li>
<li><a href="#">2.2 Creating a New Project</a>
<ul>
<li><a href="#">2.2.1 Project Templates</a></li>
<li><a href="#">2.2.2 Customizing Settings</a></li>
</ul>
</li>
<li><a href="#">2.3 Exploring the Interface</a>
<ul>
<li><a href="#">2.3.1 Toolbar Features</a></li>
<li><a href="#">2.3.2 Panel Layout</a>
<ul>
<li><a href="#">2.3.2.1 Docking Panels</a></li>
<li><a href="#">2.3.2.2 Tabbed Interface</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><a href="#">Part 3: Advanced Topics</a>
<ul>
<li><a href="#">3.1 Working with Plugins</a>
<ul>
<li><a href="#">3.1.1 Installing Plugins</a></li>
<li><a href="#">3.1.2 Plugin Configuration</a></li>
</ul>
</li>
<li><a href="#">3.2 Customizing the UI</a>
<ul>
<li><a href="#">3.2.1 Changing Themes</a></li>
<li><a href="#">3.2.2 Configuring Shortcuts</a></li>
</ul>
</li>
<li><a href="#">3.3 Optimizing Performance</a>
<ul>
<li><a href="#">3.3.1 Caching Strategies</a></li>
<li><a href="#">3.3.2 Resource Minification</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#">Part 7: Conclusion</a></li>
</ul>
</body>
</html>


Q8:-  Create a table to display a conference schedule. Each row corresponds to a time slot, and each column
corresponds to a room. Some time slots might have multiple sessions running simultaneously in different
rooms. Utilize rowspan and colspan attributes as necessary to accommodate this complex schedule.
(use table attribute “cellpadding”. to give extra padding in each table cell ).

sol:-
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <body>
        <h1>Conference Schedule</h1>
        <table border="1" cellpadding="10">
        <thead>
        <tr>
        <th>Time</th>
        <th>Room 1</th>
        <th>Room 2</th>
        <th>Room 3</th>
        <th>Room 4</th>
        </tr>
        </thead>
        <tbody>
        <tr>
        <td rowspan="3">9:00 AM - 10:00 AM</td>
        <td rowspan="2">Keynote</td>
        <td>Session A</td>
        <td>Session B</td>
        <td rowspan="3">Session C</td>
        </tr>
        <tr>
        <td>Session D</td>
        <td>Session E</td>
        </tr>
        <tr>
        <td>10:30 AM - 11:30 AM</td>
        <td colspan="2">Session F</td>
        </tr>
        <tr>
        <td>12:00 PM - 1:00 PM</td>
        <td colspan="4">Lunch Break</td>
        </tr>
        <tr>
        <td rowspan="2">1:00 PM - 2:00 PM</td>
        <td>Session G</td>
        <td rowspan="2">Session H</td>
        <td>Session I</td>
        <td>Session J</td>
        </tr>
        <tr>
        <td>Session K</td>
        <td>Session L</td>
        <td>Session M</td>
        </tr>
        </tbody>
        </table>
        </body>
</body>
</html>


